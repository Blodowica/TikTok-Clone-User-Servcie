name: Azure App Service Deployment

on:
  push:
    branches:
      - Development

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies
        run: dotnet restore TikTok-Clone-User-Service

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run Unit tests
        run: dotnet test --no-restore --verbosity normal

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"Blodowica_TikTok-Clone-User-Servcie" /o:"blodowica" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build TikTok-Clone-User-Service/TikTok-Clone-User-Service.csproj --no-incremental
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Setup .NET for security check
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies for security check
        run: dotnet restore TikTok-Clone-User-Service

      - name: Run Snyk to check for vulnerabilities
        run: |
          cd ./TikTok-Clone-User-Service
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./TikTok-Clone-User-Service/snyk.sarif

      - name: Docker Build and Push
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker build -t tiktok-clone-user-service .
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
          docker tag tiktok-clone-user-service $DOCKERHUB_USERNAME/tiktok-clone-user-service
          docker push $DOCKERHUB_USERNAME/tiktok-clone-user-service

      - name: Deploy to Azure App Service
        uses: Azure/webapps-deploy@v2
        with:
          app-name: your-azure-app-service-name
          images: ${{ secrets.DOCKERHUB_USERNAME }}/tiktok-clone-user-service:latest
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
