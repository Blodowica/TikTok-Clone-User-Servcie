name: .NET

on:
  push:
    branches: [ "Development" ]
  pull_request:
    branches: [ "Development" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.201

      - name: Restore dependencies
        run: dotnet restore TikTok-Clone-User-Service
      
      - name: Build
        working-directory: ./TikTok-Clone-User-Service
        run: dotnet build --configuration Release --no-restore
      
      - name: Run Unit tests
        working-directory: ./TikTok-Clone-User-Service
        run: dotnet test --no-restore --verbosity normal

 

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.201
      
      - name: Restore dependencies
        run: dotnet restore TikTok-Clone-User-Service

      - name: Run Snyk to check for vulnerabilities
        run: |
          cd ./TikTok-Clone-User-Service
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --sarif-file-output=snyk.sarif
        continue-on-error: true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./TikTok-Clone-User-Service/snyk.sarif

  deploy:
    runs-on: ubuntu-latest
    needs: [build, analyze, security]

    steps:
      - uses: actions/checkout@v3

      - name: Docker Build and Push
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          cd ./TikTok-Clone-User-Service
          docker build -t tiktok-clone-user-service .
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
          docker tag tiktok-clone-user-service $DOCKERHUB_USERNAME/tiktok-clone-user-service
          docker push $DOCKERHUB_USERNAME/tiktok-clone-user-service

      - name: Deploy to Azure App Service
        uses: Azure/webapps-deploy@v2
        with:
          app-name: viral-loop-user-service
          images: ${{ secrets.DOCKERHUB_USERNAME }}/tiktok-clone-user-service:latest
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
